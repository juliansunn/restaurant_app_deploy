# Generated by Django 2.2 on 2021-06-16 17:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('login_reg_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=225)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address1', models.CharField(max_length=100)),
                ('address2', models.CharField(default=None, max_length=100)),
                ('address3', models.CharField(default=None, max_length=100)),
                ('city', models.CharField(max_length=45)),
                ('zip_code', models.CharField(max_length=10)),
                ('country', models.CharField(max_length=45)),
                ('state', models.CharField(max_length=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('alias', models.SlugField()),
                ('image', models.ImageField(upload_to='uploads')),
                ('is_closed', models.BooleanField()),
                ('url', models.CharField(max_length=255)),
                ('review_count', models.IntegerField()),
                ('rating', models.FloatField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('price', models.IntegerField()),
                ('phone_number', models.CharField(max_length=20)),
                ('display_phone', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='Category', to='restaurants.Category')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_creator', to='login_reg_app.User')),
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_location', to='restaurants.Location')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_reviews', to='login_reg_app.User')),
                ('likes', models.ManyToManyField(related_name='user_review_likes', to='login_reg_app.User')),
                ('restaurant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_reviews', to='restaurants.Restaurant')),
            ],
        ),
        migrations.AddField(
            model_name='restaurant',
            name='transaction_types',
            field=models.ManyToManyField(related_name='restaurant_transactions', to='restaurants.TransactionType'),
        ),
    ]
